# TODO: make better as seen here: https://developpaper.com/configuring-gitlab-ci-for-golang-project/
# link to original: https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Go.gitlab-ci.yml
image: golang:1.24
cache:
  - key: module-cache-$CI_COMMIT_REF_SLUG
    paths:
      - .cache

variables:
  REPO_NAME: gitlab.com/insanitywholesale/gifinator
  PLATFORMS: linux/amd64,linux/arm64
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: "tcp://docker:2375"
  DOCKER_TLS_CERTDIR: ""

before_script:
  - mkdir -p .cache
  - export GOPATH="$CI_PROJECT_DIR/.cache"
  - cd $CI_PROJECT_DIR/$COMPONENT

stages:
  - format
  - build
  - test
  - release
  - deploy

check_format:
  stage: format
  script:
    - rm -rf .cache/pkg
    - test -z "$(gofmt -l .)"

compile:
  stage: build
  needs:
    - check_format
  parallel:
    matrix:
      - COMPONENT: [render, gifcreator, frontend]
  script:
    - go build -o $COMPONENT
  artifacts:
    paths:
      - render/render
      - gifcreator/gifcreator
      - frontend/frontend

vet:
  stage: test
  needs:
    - compile
  parallel:
    matrix:
      - COMPONENT: [render, gifcreator, frontend]
  script:
    - go vet -v ./...

lint:
  image: golangci/golangci-lint:latest
  stage: test
  needs:
    - compile
  parallel:
    matrix:
      - COMPONENT: [render, gifcreator, frontend]
  script:
    # TODO: fix minor lint errors
    - exit 0
    - golangci-lint run -v

unit_test:
  stage: test
  needs:
    - vet
  variables:
    MINIO_ROOT_USER: minioaccesskeyid
    MINIO_ROOT_PASSWORD: miniosecretaccesskey
    MINIO_NAME: minio
    MINIO_PORT: 9000
    REDIS_NAME: redis
  parallel:
    matrix:
      - COMPONENT: [render, gifcreator, frontend]
  services:
    - name: redis:latest
      alias: redis
    - name: minio/minio:latest
      alias: minio
      command: ["server", "/data"]
  script:
    - mkdir /tmp/scene
    - cp -r $CI_PROJECT_DIR/gifcreator/scene/* /tmp/scene/
    - go test -v ./...
    - go test -v -race ./...

docker_image:
  image:
    name: &docker_dind_img docker:dind
  stage: release
  needs:
    - compile
    - lint
  services:
    - name: *docker_dind_img
      alias: docker
  before_script:
    - apk add --no-cache tzdata git
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker buildx create --platform ${PLATFORMS} --name gitlabci --use
    - docker buildx inspect gitlabci
  script:
    - |
      docker buildx build \
        --push \
        --platform ${PLATFORMS} \
        -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA \
        -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG \
        -t $CI_REGISTRY_IMAGE:latest .
