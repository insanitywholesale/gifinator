kind: pipeline
type: kubernetes
name: default

steps:
- name: minioserver
  image: minio/minio
  command: [ "server", "/data" ]
  environment:
    MINIO_ACCESS_KEY: minioaccesskeyid
    MINIO_SECRET_KEY: miniosecretaccesskey
  detach: true

- name: minioclient
  image: minio/mc
  commands:
  - sh -c 'until mc config host add myminio http://localhost:9000 minioaccesskeyid miniosecretaccesskey; do sleep 1s; done;'
  - mc mb -p myminio/gifbucket
  - mc policy set download myminio/gifbucket
  detach: true

- name: render
  image: golang:1.16
  commands:
  - mkdir /tmp/objcache
  - cd render
  - go get -v
  - go vet -v
  - go build -v
  - go test -v

- name: rendering
  image: golang:1.16
  commands:
  - mkdir /tmp/objcache
  - cd render
  - go run render.go
  detach: true

- name: gifcreator
  image: golang:1.16
  commands:
  - cd gifcreator
  - cp -r scene /tmp/
  - go get -v
  - go vet -v
  - go build -v
  - go test -v

- name: gifcreatoring
  image: golang:1.16
  commands:
  - cd gifcreator
  - cp -r scene /tmp/
  - ./rungifcreator.sh
  detach: true

- name: frontend
  image: golang:1.16
  commands:
  - cd frontend
  - go get -v
  - go vet -v
  - go build -v
  - go test -v


services:
- name: database
  image: redis:latest
